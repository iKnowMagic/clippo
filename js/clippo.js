// koffee 1.4.0

/*
 0000000  000      000  00000000   00000000    0000000
000       000      000  000   000  000   000  000   000
000       000      000  00000000   00000000   000   000
000       000      000  000        000        000   000
 0000000  0000000  000  000        000         0000000
 */
var $, _, buffers, changeFontSize, clamp, current, defaultFontSize, doPaste, electron, elem, getFontSize, highlight, kstr, lineForTarget, loadBuffers, main, onWheel, pkg, post, prefs, ref, resetFontSize, setFocus, setFontSize, setStyle, slash, valid, w, win;

ref = require('kxk'), post = ref.post, setStyle = ref.setStyle, slash = ref.slash, clamp = ref.clamp, valid = ref.valid, prefs = ref.prefs, elem = ref.elem, kstr = ref.kstr, win = ref.win, $ = ref.$, _ = ref._;

pkg = require('../package.json');

electron = require('electron');

w = new win({
    dir: __dirname,
    pkg: pkg,
    menu: '../coffee/menu.noon',
    icon: '../img/menu@2x.png'
});

current = 0;

buffers = [];

main = $("#main");

main.style.overflow = 'scroll';

doPaste = function() {
    return post.toMain('paste', current);
};

highlight = function(index) {
    var cdiv, line;
    cdiv = $('.current');
    if (cdiv != null) {
        cdiv.classList.remove('current');
    }
    current = Math.max(0, Math.min(index, buffers.length - 1));
    line = $("line" + current);
    if (line != null) {
        line.classList.add('current');
        line.scrollIntoViewIfNeeded();
        return setFocus();
    }
};

window.onload = function() {
    highlight(buffers.length - 1);
    return setFocus();
};

setFocus = function() {
    return main.focus();
};

lineForTarget = function(target) {
    var upElem;
    if (upElem = elem.upElem(target, {
        "class": 'line-div'
    })) {
        return parseInt(upElem.id.substr(4));
    }
};

main.addEventListener('mouseover', function(event) {
    var id;
    id = lineForTarget(event.target);
    if (valid(id)) {
        return highlight(id);
    }
});

main.addEventListener('click', function(event) {
    var id;
    id = lineForTarget(event.target);
    if (valid(id)) {
        highlight(id);
        return doPaste();
    }
});

post.on('loadBuffers', function(buffs, index) {
    return loadBuffers(buffs, index);
});

post.on('schemeChanged', function() {
    return loadBuffers(buffers, current);
});

loadBuffers = function(buffs, index) {
    var buf, div, encl, i, iconDir, j, l, len, s;
    buffers = buffs;
    if (buffers.length === 0) {
        s = prefs.get('scheme', 'dark');
        $('main').innerHTML = "<center><img class='info' src=\"" + __dirname + "/../img/empty_" + s + ".png\"></center>";
        return;
    }
    iconDir = slash.encode(slash.join(electron.remote.app.getPath('userData'), 'icons'));
    $('main').innerHTML = "<div id='buffer'></div>";
    i = 0;
    for (j = 0, len = buffers.length; j < len; j++) {
        buf = buffers[j];
        div = elem({
            id: "line" + i,
            "class": 'line-div',
            child: elem('span', {
                "class": 'line-span',
                children: [
                    elem('img', {
                        "class": 'appicon',
                        src: iconDir + "/" + buf.app + ".png"
                    }), buf.image != null ? elem('img', {
                        src: "data:image/png;base64," + buf.image,
                        "class": 'image'
                    }) : buf.text != null ? (encl = (function() {
                        var k, len1, ref1, results;
                        ref1 = buf.text.split("\n");
                        results = [];
                        for (k = 0, len1 = ref1.length; k < len1; k++) {
                            l = ref1[k];
                            results.push(kstr.encode(l));
                        }
                        return results;
                    })(), elem('pre', {
                        html: encl.join("<br>")
                    })) : elem('pre')
                ]
            })
        });
        $('buffer').insertBefore(div, $('buffer').firstChild);
        i += 1;
    }
    return highlight(index != null ? index : buffers.length - 1);
};

defaultFontSize = 15;

getFontSize = function() {
    return prefs.get('fontSize', defaultFontSize);
};

setFontSize = function(s) {
    var iconSize;
    if (!_.isFinite(s)) {
        s = getFontSize();
    }
    s = clamp(4, 44, s);
    prefs.set("fontSize", s);
    setStyle("#buffer", 'font-size', s + "px");
    iconSize = clamp(18, 64, s * 2);
    setStyle('img.appicon', 'height', iconSize + "px");
    setStyle('img.appicon', 'width', iconSize + "px");
    return setStyle('img.appicon', 'padding-top', "6px");
};

changeFontSize = function(d) {
    var f, s;
    s = getFontSize();
    if (s >= 30) {
        f = 4;
    } else if (s >= 50) {
        f = 10;
    } else if (s >= 20) {
        f = 2;
    } else {
        f = 1;
    }
    return setFontSize(s + f * d);
};

resetFontSize = function() {
    prefs.set('fontSize', defaultFontSize);
    return setFontSize(defaultFontSize);
};

onWheel = function(event) {
    if (0 <= w.modifiers.indexOf('ctrl')) {
        return changeFontSize(-event.deltaY / 100);
    }
};

setFontSize(getFontSize());

window.document.addEventListener('wheel', onWheel);

post.on('combo', function(combo, info) {
    switch (combo) {
        case 'esc':
            return post.toMain('closeWin');
        case 'down':
        case 'right':
            return highlight(current - 1);
        case 'up':
        case 'left':
            return highlight(current + 1);
        case 'home':
        case 'page up':
            return highlight(buffers.length - 1);
        case 'end':
        case 'page down':
            return highlight(0);
        case 'enter':
        case 'command+v':
        case 'ctrl+v':
            return doPaste();
        case 'backspace':
        case 'command+backspace':
        case 'ctrl+backspace':
        case 'delete':
            return post.toMain('del', current);
    }
});

post.on('menuAction', function(action) {
    switch (action) {
        case 'Clear':
            return post.toMain('clearBuffer');
        case 'Save':
            return post.toMain('saveBuffer');
        case 'Increase':
            return changeFontSize(+1);
        case 'Decrease':
            return changeFontSize(-1);
        case 'Reset':
            return resetFontSize();
    }
});

loadBuffers(post.get('buffers'));

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/clippo.coffee